{"version":3,"sources":["utils/asyncComponent.jsx","store/reducer.js","store/index.js","utils/api/api.js","pages/index/nav/index.jsx","pages/index/index.jsx","pages/home/home.jsx","router/index.js","utils/api/storage.js","utils/api/http.js","serviceWorker.js","index.js"],"names":["importComponent","defaultState","str","store","createStore","state","arguments","length","undefined","getLinkBarPageList","params","axios","post","then","res","data","catch","err","console","log","Home","pageData","name","getPageDatas","message","result","success","_this","setState","renderLi","item","react_default","a","createElement","key","id","className","href","style","backgroundImage","bg","data-title","title","target","this","nextProps","nextState","_this2","_this$state","_this$state$pageData","map","Component","props","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","deal","val","alert","is","fromJS","index_nav","textAlign","width","height","display","src","color","fontSize","jump","history","push","getState","pages_index","record","__webpack_require__","e","bind","_Component","AsyncComponent","component","inherits","createClass","value","_componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","_ref","wrap","_context","prev","next","sent","default","stop","apply","C","RouteConfig","react_router_dom","react_router","path","exact","home","BASEURL","defaults","baseURL","timeout","responseType","interceptors","request","use","config","token","JSON","parse","localStorage","getItem","headers","common","concat","error","Promise","reject","response","status","stack","indexOf","Boolean","window","location","hostname","match","Route","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e35c24dc.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport default function asyncComponent(importComponent) {\r\n  class AsyncComponent extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n        component: null\r\n      };\r\n    }\r\n\r\n    async componentDidMount() {\r\n      const { default: component } = await importComponent();\r\n\r\n      this.setState({component});\r\n    }\r\n\r\n    render() {\r\n      const C = this.state.component;\r\n\r\n      return C ? <C {...this.props} /> : null;\r\n    }\r\n  }\r\n\r\n  return AsyncComponent;\r\n}","let defaultState = {\r\n    str: '---store test--'\r\n}\r\n\r\nexport default (state=defaultState,action)=>{\r\n    // if(action.type === 'change_input'){\r\n    //     const newState = JSON.parse(JSON.stringify(state))\r\n    //     newState.str = action.srt;\r\n    //     return newState;\r\n    // }\r\n    return state;\r\n}","import { createStore } from 'redux';\r\nimport reducer from './reducer';\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;\r\n\r\n\r\n\r\n// class Provider extends Component {\r\n//     getChildContext() { \r\n//         return { \r\n//             [storeKey]: this[storeKey], [subscriptionKey]: null\r\n//         }\r\n//         // storeKey 默认是'store'\r\n//      } \r\n//     constructor(props, context) { \r\n//         super(props, context) \r\n//         this[storeKey] = props.store; \r\n//     } \r\n//     render() { \r\n//         return Children.only(this.props.children) \r\n//     }\r\n// }\r\n\r\n","import axios from 'axios';\n\nexport const userlogin = params => { return axios.post(`/login`, params).then(res => res.data).catch(err=>{console.log(err)}); };\n\nexport const getLinkBarPageList = params => { return axios.post(`/linkBar/pagelist`, params).then(res => res.data).catch(err=>{console.log(err)}); };\n","import React, { Component } from 'react'\r\nimport { is, fromJS } from 'immutable'\r\nimport { getLinkBarPageList } from '../../../utils/api/api';\r\n \r\nimport './index.css'\r\n\r\n\r\nclass Home extends Component {\r\n\r\n  state = {\r\n    pageData: [],\r\n    name: ''\r\n  }\r\n\r\n  // constructor(props){\r\n  //   super(props);\r\n  // }\r\n\r\n  componentWillMount() {\r\n    // 组件初始化时调用，更新不调用，整个生命周期只有一次，可以修改state\r\n\r\n    this.getPageDatas()\r\n  }\r\n  componentDidMount() {\r\n    // 组件渲染之后调用，只调用一次\r\n    console.log('nav-componentDidMount')\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    // 组件初始化不调用，组件接收新的props时调用\r\n  }\r\n  componentWillUpdate(nextProps, nextState) {\r\n    // 组件初始化时不调用，只有在组件将要更新时才调用，此时可以修改state\r\n  }\r\n  componentDidUpdate() {\r\n    // 组件初始化时不调用，组件更新完成后调用，此时可以获取dom节点\r\n  }\r\n  componentWillUnmount() {\r\n    // 组件将要卸载时调用，一些事件监听和定时器需要在此时清除\r\n  }\r\n  // shouldComponentUpdate(nextProps, nextState) {\r\n  //   // 组建判断是否需要重新渲染时调用\r\n  //   return !is(fromJS(this.props), fromJS(nextProps)) || is(fromJS(this.state), fromJS(nextState))\r\n  // }\r\n\r\n\r\n  getPageDatas = ()=> {\r\n    let para = {};\r\n    getLinkBarPageList(para).then((res) => {\r\n      if(res){\r\n        let { message, result, success} = res;\r\n        if(res.success ){\r\n          this.setState({\r\n            pageData: result\r\n          })\r\n          return\r\n        }\r\n        console.log(message)\r\n      }\r\n    });\r\n  }\r\n\r\n  renderLi = (item) => {\r\n    return(\r\n      <li key={'id-'+item.id}>\r\n        <div className=\"block\">\r\n            <a className=\"alink aicon\" \r\n                href={item.href} \r\n                style={ {'backgroundImage': 'url('+item.bg+')'}}\r\n                data-title={item.title}\r\n                target=\"_blank\"\r\n            >{item.name}</a>\r\n        </div>\r\n      </li>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    // const pageData = require('./pageData.json');\r\n    const { pageData=[], name } = this.state;\r\n    return (\r\n      <ul className=\"common-list\">\r\n          {pageData && pageData.map(item=>{\r\n              return this.renderLi(item)\r\n          })}\r\n      </ul>\r\n    )\r\n  }\r\n}\r\nexport default Home\r\n","import React, { Component } from 'react'\r\nimport { is, fromJS } from 'immutable'\r\n\r\nimport './index.css'\r\n\r\nimport store from '../../store'\r\n\r\nimport NavCompont from './nav'\r\n\r\n\r\nclass Home extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n  }\r\n\r\n  state = {\r\n    name: '-'\r\n  }\r\n\r\n  componentWillMount() {\r\n    // 组件初始化时调用，更新不调用，整个生命周期只有一次，可以修改state\r\n    // this.setState({\r\n    //   name: 'hello world'\r\n    // })\r\n    // this.setState({\r\n    //   name: store.getState().str\r\n    // })\r\n\r\n    console.log('componentWillMount')\r\n\r\n  }\r\n  componentDidMount() {\r\n    // 组件渲染之后调用，只调用一次\r\n    console.log('componentDidMount')\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    // 组件初始化不调用，组件接收新的props时调用\r\n  }\r\n  componentWillUpdate(nextProps, nextState) {\r\n    // 组件初始化时不调用，只有在组件将要更新时才调用，此时可以修改state\r\n  }\r\n  componentDidUpdate() {\r\n    // 组件初始化时不调用，组件更新完成后调用，此时可以获取dom节点\r\n  }\r\n  componentWillUnmount() {\r\n    // 组件将要卸载时调用，一些事件监听和定时器需要在此时清除\r\n  }\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    // 组建判断是否需要重新渲染时调用\r\n    return !is(fromJS(this.props), fromJS(nextProps)) || is(fromJS(this.state), fromJS(nextState))\r\n  }\r\n\r\n  deal = (val) => {\r\n    console.log(val)\r\n    alert(val)\r\n    this.setState({\r\n      name: val\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div className=\"main\">\r\n            <div className=\"common-block\">\r\n                <p className=\"common-title\"><strong>链接</strong></p>\r\n                <NavCompont />\r\n            </div>\r\n\r\n\r\n            <div className=\"common-block\">\r\n                <p className=\"common-title\"><strong>轻松一下</strong></p>\r\n                <ul className=\"list\" style={ { textAlign:'left' } }>\r\n                    <li>\r\n                        <a href=\"http://13culb.com/actgame/index.html\" target=\"_blank\">推塔游戏</a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n\r\n            <div className=\"common-block\">\r\n                <p className=\"common-title\"><strong>直播</strong></p>\r\n                <div className=\"common-tips\">高清直播，让看电视更加方便，让我们一起手机网页看电视吧</div>\r\n                <div className=\"common-tips-moblie\">温馨提示：为了保证视频流程，建议在较好网络前提下</div>\r\n                <ul className=\"list\">\r\n                    <li><a className=\"button\" href=\"http://sevenliao.com/cctv1.html\" target=\"_blank\">CCTV1(高清)</a></li>\r\n                    <li><a className=\"button\" href=\"http://sevenliao.com/cctv3.html\" target=\"_blank\">CCTV3(高清)</a></li>\r\n                    <li><a className=\"button\" href=\"http://sevenliao.com/cctv5.html\" target=\"_blank\">CCTV5+(高清)</a></li>\r\n                    <li><a className=\"button\" href=\"http://sevenliao.com/cctv6.html\" target=\"_blank\">CCTV6(高清)</a></li>\r\n                \r\n                    <li><a className=\"button\" href=\"http://sevenliao.com/hunan.html\" target=\"_blank\">湖南卫视</a></li>\r\n                    <li><a className=\"button\" href=\"http://sevenliao.com/HKcaijin.html\" target=\"_blank\">香港财经</a></li>\r\n                    <li><a className=\"button\" href=\"http://sevenliao.com/KRgoodTv.html\" target=\"_blank\">韩国GoodTV</a></li>\r\n                    <li><a className=\"button\" href=\"http://sevenliao.com/USA2.html\" target=\"_blank\">美国2</a></li>\r\n                </ul>\r\n            </div>\r\n\r\n            <div className=\"common-block\">\r\n                <p className=\"common-title\"><strong>广告</strong></p>\r\n                <ul className=\"list\">\r\n                    <li style={ { textAlign:'left' } }>\r\n                        <h3>1.搜索关注微信公众号：sevenliao，内容更精彩</h3>\r\n                        <img style={ { width:'120px', height:'120px', display:' inline-block' } } src=\"http://sevenliao.com/images/7.jpg\" />\r\n       \r\n                        <h3><a href=\"http://www.sevenliao.cn/\">2.前端开发技术文章</a></h3>\r\n          \r\n                        <h3><a href=\"http://13culb.com/actgame/index.html\">3.13Culb游戏中心</a></h3>\r\n         \r\n                        <h3>4.微信小程序《大头贴纸》，给自己图片美颜一下或者加个头像呗</h3>\r\n                        <img  style={ { width:'150px', height:'150px', display:' inline-block' } } src=\"http://sevenliao.com/images/dttz.jpg\" />\r\n                        \r\n                        <h3><a href=\"https://juejin.cn/user/2736016885557869\" target=\"_blank\">5.稀土掘金主页</a></h3>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n            <div className=\"common-block\">\r\n                <p className=\"common-title\"><strong>赞赏</strong></p>\r\n                <ul className=\"list\">\r\n                    <li>\r\n                        <h3>喜欢就这个页面，就打赏杯咖啡杯呗！</h3>\r\n                        <img style={ { width:'220px', height:'220px', display:' inline-block' } } src=\"http://sevenliao.com/images/pay.jpg\" />\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n\r\n            <p  style={ { color:'#333333', fontSize:'12px' } }>说明： 个人学习代码，不做任何商业用途</p>\r\n\r\n        </div>\r\n    )\r\n  }\r\n}\r\nexport default Home\r\n","import React, { Component } from 'react'\r\nimport { is, fromJS } from 'immutable'\r\n\r\nimport store from '../../store'\r\n\r\nimport Index from '../index/index'\r\nimport './home.css'\r\n\r\nclass Home extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n  }\r\n\r\n  state = {\r\n    name: '-'\r\n  }\r\n\r\n  componentWillMount() {\r\n    // 组件初始化时调用，更新不调用，整个生命周期只有一次，可以修改state\r\n    this.setState({\r\n      name: 'hello world'\r\n    })\r\n    this.setState({\r\n      name: store.getState().str\r\n    })\r\n  }\r\n  componentDidMount() {\r\n    // 组件渲染之后调用，只调用一次\r\n    console.log('componentDidMount')\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    // 组件初始化不调用，组件接收新的props时调用\r\n  }\r\n  componentWillUpdate(nextProps, nextState) {\r\n    // 组件初始化时不调用，只有在组件将要更新时才调用，此时可以修改state\r\n  }\r\n  componentDidUpdate() {\r\n    // 组件初始化时不调用，组件更新完成后调用，此时可以获取dom节点\r\n  }\r\n  componentWillUnmount() {\r\n    // 组件将要卸载时调用，一些事件监听和定时器需要在此时清除\r\n  }\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    // 组建判断是否需要重新渲染时调用\r\n    return !is(fromJS(this.props), fromJS(nextProps)) || is(fromJS(this.state), fromJS(nextState))\r\n  }\r\n  deal = (val) => {\r\n    console.log(val)\r\n    alert(val)\r\n    this.setState({\r\n      name: val\r\n    })\r\n  }\r\n\r\n  jump = (val) => {\r\n    console.log('jump')\r\n    console.log(val)\r\n\r\n    this.props.history.push(\"/record\")\r\n  }\r\n\r\n\r\n  render() {\r\n    const { name } = this.state;\r\n    return (\r\n      <div>\r\n        {/* <div>{name}</div>\r\n        <button onClick={this.deal.bind(this,'hi event click')}>onClick</button>\r\n\r\n        <hr></hr>\r\n        <div>\r\n          页面跳转\r\n          <button onClick={this.jump.bind(this,'click')}>record</button>\r\n        </div>\r\n        <hr></hr> */}\r\n\r\n        {/* <div>\r\n          <Index></Index>\r\n        </div> */}\r\n\r\n        <Index></Index>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Home\r\n","import React, { Component } from 'react'\r\nimport { HashRouter, Switch, Route } from 'react-router-dom'\r\nimport asyncComponent from '@/utils/asyncComponent'\r\nimport home from '@/pages/home/home'\r\nconst record = asyncComponent(() => import('@/pages/record/record'))\r\nexport default class RouteConfig extends Component {\r\n  render() {\r\n    return (\r\n      <HashRouter>\r\n        <Switch>\r\n          <Route path=\"/\" exact component={home}/>\r\n          <Route path=\"/home\" exact component={home}/>\r\n          <Route path=\"/record\" component={record}/>\r\n        </Switch>\r\n      </HashRouter>\r\n    )\r\n  }\r\n}","\r\n// export const BASEURL = 'http://127.0.0.1:7001';\r\n// export const BASEURL = '//39.108.188.233:8080/api/';\r\nexport const BASEURL = 'http://39.108.188.233:443/api/';\r\n// export const BASEURL = 'http://39.108.188.233:7002/api/';\r\n// export const BASEURL = 'http://127.0.0.1:7002/api/';\r\n// export const BASEURL = 'http://127.0.0.1:8081/api/';\r\n","import axios from 'axios';\r\n// import { Message } from 'element-ui'\r\n// import router from './../routes'\r\nimport { BASEURL } from './storage'\r\n\r\n\r\n//接口地址域名+端口号\r\nconsole.log('BASEURL:',BASEURL)\r\naxios.defaults.baseURL = BASEURL;\r\naxios.defaults.timeout =15000;\r\naxios.defaults.responseType = 'json';\r\n\r\n// http request 请求拦截器\r\naxios.interceptors.request.use(config => {\r\n\t// 在发送请求之前做些什么\r\n    // let pathname = location.pathname;\r\n    let token = JSON.parse( localStorage.getItem('token') )\r\n\tif(token){\r\n\t\t// if(pathname != '/' &&  pathname != '/login'){\r\n            // Authorization=`Bearer ${token}`\r\n            // config.headers.common['token'] = localStorage.getItem('token');\r\n        // }\r\n        config.headers.common['Authorization'] = `Bearer ${token}`;\r\n\t}\r\n\treturn config;\r\n}, error => {\r\n\t// 对请求错误做些什么\r\n    console.log('request err:',error)\r\n\treturn Promise.reject(error);\r\n});\r\n\r\n\r\n\r\n// http response 响应拦截器\r\naxios.interceptors.response.use(response => {\r\n    // return response;\r\n\r\n    // if (typeof(response) != 'String'&&response.data.errno !== 0 && response.config.url.indexOf('searchorderoyidornumber') < 0 && response.config.url.indexOf('upload') < 0) {\r\n    //     response.data['data'] = response.data['data'] || {};\r\n    //     Toast(response.data.errmsg)\r\n    // }\r\n    // if (typeof(response) != 'String'&&response.data.errno == 3521) {\r\n    //     localStorage.clear();\r\n    //     location.href = '#/login'\r\n    // }\r\n    // return response.status == 200 ? response.data : response;  \r\n\r\n    if(response.status == 200){\r\n        return response\r\n    }else{\r\n        console.log('接口异常')\r\n    }\r\n},error => {\r\n    console.log('response err:',error)\r\n    if (error && error.stack.indexOf('timeout') > -1) {\r\n        // Message.error({message: '请求超时！请重试！'});\r\n        console.log('登陆超时！请重新登陆！')\r\n    }\r\n    if (error.response) {\r\n        switch (error.response.status) {\r\n                // 返回401，清除token信息并跳转到登录页面\r\n                case 401:\r\n                    console.log('401 登陆超时！请重新登陆！')\r\n                    // Message.error({message: '登陆超时！请重新登陆！'});\r\n                    // //localStorage.removeItem('token');\r\n                    // router.replace({\r\n                    //     path: '/login',\r\n                    //     //登录成功后跳入浏览的当前页面\r\n                    //     query: {redirect: router.currentRoute.fullPath}\r\n                    // })\r\n        }\r\n        // 返回接口返回的错误信息\r\n        return Promise.reject(error.response.data);\r\n        //return Promise.reject(error.response);\r\n   }\r\n});","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import { AppContainer } from 'react-hot-loader';\r\nimport Route from './router/'\r\nimport './utils/api/http'\r\n// import {Provider} from 'react-redux';\r\n// import store from '@store/store';\r\n// import store from '@store/index';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst render = Component => {\r\n  ReactDOM.render(\r\n    // <Provider store={store}>\r\n    //   <Component />\r\n    // </Provider>, \r\n  \r\n    <Component />,\r\n    document.getElementById('root'));\r\n}\r\nrender(Route)\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nif (module.hot) {\r\n  module.hot.accept('./router/', () => {\r\n    render(Route);\r\n  })\r\n}\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}